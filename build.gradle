//
plugins {
    id 'org.octopusden.octopus-release-management'
    id 'groovy'
    id 'java-gradle-plugin'
    id 'com.jfrog.artifactory'
}

version = project.findProperty('buildVersion') ?: System.getenv("BUILD_VERSION") ?: '1.0-SNAPSHOT'
group = 'org.octopusden.octopus'
description "License gradle plugin"

ext {
    m2localPath = project.hasProperty('m2_local') ? new File(m2_local).toURI().toURL().toString().replaceAll(/^file:\//, 'file:///') : null
    escrowBuild = m2localPath != null
}

repositories {
    mavenCentral()
    maven {
        url "https://plugins.gradle.org/m2/"
    }
}

dependencies {
    implementation "com.github.node-gradle:gradle-node-plugin:${project.'gradle-node-plugin.version'}"
}

gradlePlugin {
    plugins {
        LicenseGradlePlugin {
            id = 'org.octopusden.octopus.license-management'
            implementationClass = 'org.octopusden.octopus.license.management.plugins.gradle.LicenseGradlePlugin'
        }
    }
}

sourceSets {
    main {
        java { srcDirs = [] }    // no source dirs for the java compiler
        groovy { srcDirs = ["src/main/groovy", "src/main/java"] }  // compile   everything in src/ with groovy
    }
}

sourceCompatibility = 1.8
targetCompatibility = 1.8

java{
    withSourcesJar()
}

dependencies {
    api group: 'com.platformlib', name: 'platformlib-process-local', version: project['platformlib-process.version']
}

apply plugin: 'maven-publish'

if (!project.tasks.findByName('exportDependenciesToTeamcity')) {
    task exportDependenciesToTeamcity
}

artifactory {

    def baseUrl = System.getenv('ARTIFACTORY_URL') ?: project.properties.get('artifactoryUrl')
    if (baseUrl != null) {
        contextUrl = "${baseUrl}/artifactory" as String
    }

    publish {
        repositories {
            repository {
                repoKey = 'rnd-maven-dev-local'
                username = System.getenv('ARTIFACTORY_DEPLOYER_USERNAME') ?: project.findProperty('NEXUS_USER')
                password = System.getenv('ARTIFACTORY_DEPLOYER_PASSWORD') ?: project.findProperty('NEXUS_PASSWORD')
                maven = true
            }
            repository {
                if (escrowBuild) {
                    maven {
                        url m2localPath
                    }
                }
            }
        }
        defaults {
            publications('ALL_PUBLICATIONS')
            publishArtifacts = true
            publishPom = true
            publishBuildInfo = true
        }
    }
}

if (!escrowBuild) {
    project.tasks.findByPath("publish")?.dependsOn(":artifactoryPublish")
}

if (!project.tasks.findByName('openStagingRepository')) {
    task openStagingRepository
}

if (!project.tasks.findByName('closeStagingRepository')) {
    task closeStagingRepository
}