//
plugins {
    id 'groovy'
    id 'java-gradle-plugin'
    id 'maven-publish'
    id 'io.github.gradle-nexus.publish-plugin' version '1.3.0'
    id 'signing'
}

group = 'org.octopusden.octopus'
description "License gradle plugin"

repositories {
    mavenCentral()
    gradlePluginPortal()
}

dependencies {
    implementation "com.github.node-gradle:gradle-node-plugin:${project.'gradle-node-plugin.version'}"
    api "org.octopusden.octopus.infrastructure:components-registry-service-client:${project['octopus-components-registry-service.version']}"
}

gradlePlugin {
    plugins {
        LicenseGradlePlugin {
            id = 'org.octopusden.octopus.license-management'
            implementationClass = 'org.octopusden.octopus.license.management.plugins.gradle.LicenseGradlePlugin'
        }
    }
}

sourceSets {
    main {
        java { srcDirs = [] }    // no source dirs for the java compiler
        groovy { srcDirs = ["src/main/groovy", "src/main/java"] }  // compile   everything in src/ with groovy
    }
}

sourceCompatibility = 1.8
targetCompatibility = 1.8

java{
    withJavadocJar()
    withSourcesJar()
}

dependencies {
    api group: 'com.platformlib', name: 'platformlib-process-local', version: project['platformlib-process.version']
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            from(components.java)
            pom {
                name = "license-gradle-plugin"
                description = "Octopus module: license-gradle-plugin"
                url = "https://github.com/octopusden/octopus-license-gradle-plugin.git"
                licenses {
                    license {
                        name = "The Apache License, Version 2.0"
                        url = "http://www.apache.org/licenses/LICENSE-2.0.txt"
                    }
                }
                developers {
                    developer {
                        id = "octopus"
                        name = "octopus"
                        email = "octopus@org.com"
                    }
                }
                scm {
                    connection = "scm:git://github.com/octopusden/octopus-license-gradle-plugin.git"
                    developerConnection = "scm:git://github.com/octopusden/octopus-license-gradle-plugin.git"
                    url = "https://github.com/octopusden/octopus-license-gradle-plugin.git"
                }
            }
        }
    }
}

nexusPublishing {
    repositories {
        sonatype {
            nexusUrl = uri("https://s01.oss.sonatype.org/service/local/")
            snapshotRepositoryUrl = uri("https://s01.oss.sonatype.org/content/repositories/snapshots/")
            username = System.getenv("MAVEN_USERNAME")
            password = System.getenv("MAVEN_PASSWORD")
        }
    }
}

signing {
    def signingKey = project.findProperty('signingKey')
    def signingPassword = project.findProperty('signingPassword')
    if (signingKey && signingPassword) {
        useInMemoryPgpKeys(signingKey, signingPassword)
        sign publishing.publications.mavenJava
    } else {
        logger.lifecycle("Signing keys or passwords are not provided. Skipping signing.")
    }
}

gradlePlugin { automatedPublishing = false }
